<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<groupId>com.galigeo</groupId>
	<artifactId>galigeo-print-service</artifactId>	
	<version>MAIN</version>

	<name>galigeo-print-server</name>
	<url>https://www.galigeo.com</url>

	<properties>		
		<today>${maven.build.timestamp}</today>
		<maven.build.timestamp.format>dd-MM-yyyy HH:mm:ss</maven.build.timestamp.format>
		<GIT-Build-galigeo-print-server>${env.GIT_COMMIT}</GIT-Build-galigeo-print-server>
		<GIT_BRANCH>${env.GIT_BRANCH}</GIT_BRANCH>
		<JENKINS-Build>${env.BUILD_TAG}</JENKINS-Build>
		<target.gggo.release>G23 and greater</target.gggo.release>
		
		
		<build.temp.folder>target/build</build.temp.folder>
		<build.zip.name>GaligeoPrintService</build.zip.name>
		<node.version>v22.13.0</node.version>
		<node.binary.download>node-${node.version}-win-x64</node.binary.download>
		
	</properties>

	<build>		
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>					

					<execution>
							<id>node version (initialize)</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<phase>initialize</phase>
							<configuration>
								<executable>node</executable>
								<arguments>
									<argument>-v</argument>									
								</arguments>
							</configuration>
					</execution>					
					
					<execution>
							<id>npm install (compile)</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<phase>compile</phase>
							<configuration>
								<executable>npm</executable>
								<arguments>
									<argument>install</argument>									
								</arguments>
							</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				
				<executions>
					
					<execution>
						<id>build</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<mkdir dir="${build.temp.folder}" />

								<move verbose="false"
									todir="${build.temp.folder}/node_modules">
									<fileset dir="node_modules" />
								</move>

								<copy overwrite="yes" verbose="yes"
									file=".env"
									tofile="${build.temp.folder}/.env" />

								<copy overwrite="yes" verbose="yes"
									file="package-lock.json"
									tofile="${build.temp.folder}/package-lock.json" />

								<copy overwrite="yes" verbose="yes"
									file="index.js"
									tofile="${build.temp.folder}/index.js" />

								<copy verbose="true"
									todir="${build.temp.folder}">
									<fileset dir="win-resources" />
								</copy>

								<get src="https://nodejs.org/dist/${node.version}/${node.binary.download}.zip"
     								dest="${build.temp.folder}/node.zip"
     								verbose="false"/>

								<unzip overwrite="true"
										src="${build.temp.folder}/node.zip"
										dest="${build.temp.folder}" />

								<move verbose="false"
									todir="${build.temp.folder}/node">
									<fileset dir="${build.temp.folder}/${node.binary.download}" />
								</move>

								<delete dir="${build.temp.folder}/${node.binary.download}" />
								<delete file="${build.temp.folder}/node.zip" />
								<delete dir="node_modules" />

								<zip destfile="target/${build.zip.name}.zip">
									<zipfileset dir="${build.temp.folder}"
										prefix="${build.zip.name}" />
								</zip>

								<delete dir="${build.temp.folder}" />

							</target>
						</configuration>
					</execution>

				</executions>

				<dependencies>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>1.4.1</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-version</id>						
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>./target</outputDirectory>
							<resources>
								<resource>
									<directory>mvn-resources</directory>
									<filtering>true</filtering>
									<includes>
										<include>version.txt</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>target</directory>
								<includes>
									<include>**/**</include>
								</includes>								
							</fileset>
							<fileset>
								<directory>node_modules</directory>
								<includes>
									<include>**/**</include>
								</includes>								
							</fileset>
						</filesets>
					</configuration>
			</plugin>
			
		</plugins>

		
	</build>
</project>
